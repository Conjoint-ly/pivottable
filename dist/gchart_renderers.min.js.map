{"version":3,"sources":["gchart_renderers.coffee","gchart_renderers.min.js"],"names":["callWithJQuery","pivotModule","exports","module","require","define","amd","jQuery","$","makeGoogleChart","chartType","extraOptions","pivotData","opts","agg","base","base1","colKey","colKeys","dataArray","dataTable","defaults","fullAggName","groupByTitle","h","hAxisTitle","headers","i","j","len","len1","numCharsInHAxis","options","ref","result","row","rowKey","rowKeys","title","tree2","vAxisTitle","val","valAttrs","wrapper","x","y","localeStrings","vs","by","gchart","extend","width","window","innerWidth","height","innerHeight","getRowKeys","length","push","getColKeys","aggregatorName","map","item","labels","join","results","unshift","tree","parseFloat","format","value","google","visualization","DataTable","addColumn","colAttrs","rowAttrs","type","role","addRows","getAggregator","isNumeric","toPrecision","toFixed","arrayToDataTable","ref1","hAxis","slantedText","vAxis","tooltip","textStyle","fontName","fontSize","minValue","legend","position","chartArea","css","ChartWrapper","pivotUtilities","gchart_renderers","Line Chart","Bar Chart","Stacked Bar Chart","isStacked","Area Chart","Scatter Chart","Pie Chart","call","this"],"mappings":"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","file":"gchart_renderers.min.js","sourcesContent":["callWithJQuery = (pivotModule) ->\n    if typeof exports is \"object\" and typeof module is \"object\" # CommonJS\n        pivotModule require(\"jquery\")\n    else if typeof define is \"function\" and define.amd # AMD\n        define [\"jquery\"], pivotModule\n    # Plain browser env\n    else\n        pivotModule jQuery\n\ncallWithJQuery ($) ->\n\n    makeGoogleChart = (chartType, extraOptions) -> (pivotData, opts) ->\n        defaults =\n            localeStrings:\n                vs: \"vs\"\n                by: \"by\"\n            gchart: {}\n\n        opts = $.extend(true, {}, defaults, opts)\n        opts.gchart.width ?= window.innerWidth / 1.4\n        opts.gchart.height ?= window.innerHeight / 1.4\n\n        rowKeys = pivotData.getRowKeys()\n        rowKeys.push [] if rowKeys.length == 0\n        colKeys = pivotData.getColKeys()\n        colKeys.push [] if colKeys.length == 0\n        fullAggName = pivotData.aggregatorName\n        if pivotData.valAttrs.length\n            valAttrs = pivotData.valAttrs.map (item) -> opts.labels[item] ? item\n            fullAggName += \"(#{valAttrs.join(\", \")})\"\n        headers = (h.join(\"-\") for h in rowKeys)\n        headers.unshift \"\"\n\n        numCharsInHAxis = 0\n        if chartType == \"ScatterChart\"\n            dataArray = []\n            for y, tree2 of pivotData.tree\n                for x, agg of tree2\n                     dataArray.push [\n                        parseFloat(x),\n                        parseFloat(y),\n                        fullAggName+\": \\n\"+agg.format(agg.value())\n                        ]\n            dataTable = new google.visualization.DataTable()\n            dataTable.addColumn 'number', pivotData.colAttrs.join(\"-\")\n            dataTable.addColumn 'number', pivotData.rowAttrs.join(\"-\")\n            dataTable.addColumn type: \"string\", role: \"tooltip\"\n            dataTable.addRows dataArray\n            hAxisTitle = pivotData.colAttrs.join(\"-\")\n            vAxisTitle = pivotData.rowAttrs.join(\"-\")\n            title = \"\"\n        else\n            dataArray = [headers]\n            for colKey in colKeys\n                row = [colKey.join(\"-\")]\n                numCharsInHAxis += row[0].length\n                for rowKey in rowKeys\n                    agg = pivotData.getAggregator(rowKey, colKey)\n                    if agg.value()?\n                        val = agg.value()\n                        if $.isNumeric val\n                            if val < 1\n                                row.push parseFloat(val.toPrecision(3))\n                            else\n                                row.push parseFloat(val.toFixed(3))\n                        else\n                            row.push val\n                    else row.push null\n                dataArray.push row\n\n            dataTable = google.visualization.arrayToDataTable(dataArray)\n\n            title = vAxisTitle = fullAggName\n            hAxisTitle = pivotData.colAttrs.map (item) -> opts.labels[item] ? item\n            .join(\"-\")\n            title += \" #{opts.localeStrings.vs} #{hAxisTitle}\" if hAxisTitle != \"\"\n            groupByTitle = pivotData.rowAttrs.map (item) -> opts.labels[item] ? item\n            .join(\"-\")\n            title += \" #{opts.localeStrings.by} #{groupByTitle}\" if groupByTitle != \"\"\n\n        options =\n            title: title\n            hAxis: {title: hAxisTitle, slantedText: numCharsInHAxis > 50}\n            vAxis: {title: vAxisTitle}\n            tooltip: { textStyle: { fontName: 'Arial', fontSize: 12 } }\n\n        if chartType == \"ColumnChart\"\n            options.vAxis.minValue = 0\n\n        if chartType == \"ScatterChart\"\n            options.legend = position: \"none\"\n            options.chartArea = {'width': '80%', 'height': '80%'}\n\n        else if dataArray[0].length == 2 and dataArray[0][1] ==  \"\"\n            options.legend = position: \"none\"\n\n        options = $.extend(true, {}, options, opts.gchart, extraOptions, opts)\n\n        result = $(\"<div>\").css(width: \"100%\", height: \"100%\")\n        wrapper = new google.visualization.ChartWrapper {dataTable, chartType, options}\n        \n        # result.bind \"dblclick\", ->\n        #     editor = new google.visualization.ChartEditor()\n        #     google.visualization.events.addListener editor, 'ok', ->\n        #         editor.getChartWrapper().draw(result[0])\n        #     editor.openDialog(wrapper)\n\n        return {result, wrapper}\n\n    $.pivotUtilities.gchart_renderers =\n        \"Line Chart\": makeGoogleChart(\"LineChart\")\n        \"Bar Chart\": makeGoogleChart(\"ColumnChart\")\n        \"Stacked Bar Chart\": makeGoogleChart(\"ColumnChart\", isStacked: true)\n        \"Area Chart\": makeGoogleChart(\"AreaChart\", isStacked: true)\n        \"Scatter Chart\": makeGoogleChart(\"ScatterChart\")\n        \"Pie Chart\": makeGoogleChart(\"PieChart\")\n","(function() {\n  var callWithJQuery;\n\n  callWithJQuery = function(pivotModule) {\n    if (typeof exports === \"object\" && typeof module === \"object\") {\n      return pivotModule(require(\"jquery\"));\n    } else if (typeof define === \"function\" && define.amd) {\n      return define([\"jquery\"], pivotModule);\n    } else {\n      return pivotModule(jQuery);\n    }\n  };\n\n  callWithJQuery(function($) {\n    var makeGoogleChart;\n    makeGoogleChart = function(chartType, extraOptions) {\n      return function(pivotData, opts) {\n        var agg, base, base1, colKey, colKeys, dataArray, dataTable, defaults, fullAggName, groupByTitle, h, hAxisTitle, headers, i, j, len, len1, numCharsInHAxis, options, ref, result, row, rowKey, rowKeys, title, tree2, vAxisTitle, val, valAttrs, wrapper, x, y;\n        defaults = {\n          localeStrings: {\n            vs: \"vs\",\n            by: \"by\"\n          },\n          gchart: {}\n        };\n        opts = $.extend(true, {}, defaults, opts);\n        if ((base = opts.gchart).width == null) {\n          base.width = window.innerWidth / 1.4;\n        }\n        if ((base1 = opts.gchart).height == null) {\n          base1.height = window.innerHeight / 1.4;\n        }\n        rowKeys = pivotData.getRowKeys();\n        if (rowKeys.length === 0) {\n          rowKeys.push([]);\n        }\n        colKeys = pivotData.getColKeys();\n        if (colKeys.length === 0) {\n          colKeys.push([]);\n        }\n        fullAggName = pivotData.aggregatorName;\n        if (pivotData.valAttrs.length) {\n          valAttrs = pivotData.valAttrs.map(function(item) {\n            var ref;\n            return (ref = opts.labels[item]) != null ? ref : item;\n          });\n          fullAggName += \"(\" + (valAttrs.join(\", \")) + \")\";\n        }\n        headers = (function() {\n          var i, len, results;\n          results = [];\n          for (i = 0, len = rowKeys.length; i < len; i++) {\n            h = rowKeys[i];\n            results.push(h.join(\"-\"));\n          }\n          return results;\n        })();\n        headers.unshift(\"\");\n        numCharsInHAxis = 0;\n        if (chartType === \"ScatterChart\") {\n          dataArray = [];\n          ref = pivotData.tree;\n          for (y in ref) {\n            tree2 = ref[y];\n            for (x in tree2) {\n              agg = tree2[x];\n              dataArray.push([parseFloat(x), parseFloat(y), fullAggName + \": \\n\" + agg.format(agg.value())]);\n            }\n          }\n          dataTable = new google.visualization.DataTable();\n          dataTable.addColumn('number', pivotData.colAttrs.join(\"-\"));\n          dataTable.addColumn('number', pivotData.rowAttrs.join(\"-\"));\n          dataTable.addColumn({\n            type: \"string\",\n            role: \"tooltip\"\n          });\n          dataTable.addRows(dataArray);\n          hAxisTitle = pivotData.colAttrs.join(\"-\");\n          vAxisTitle = pivotData.rowAttrs.join(\"-\");\n          title = \"\";\n        } else {\n          dataArray = [headers];\n          for (i = 0, len = colKeys.length; i < len; i++) {\n            colKey = colKeys[i];\n            row = [colKey.join(\"-\")];\n            numCharsInHAxis += row[0].length;\n            for (j = 0, len1 = rowKeys.length; j < len1; j++) {\n              rowKey = rowKeys[j];\n              agg = pivotData.getAggregator(rowKey, colKey);\n              if (agg.value() != null) {\n                val = agg.value();\n                if ($.isNumeric(val)) {\n                  if (val < 1) {\n                    row.push(parseFloat(val.toPrecision(3)));\n                  } else {\n                    row.push(parseFloat(val.toFixed(3)));\n                  }\n                } else {\n                  row.push(val);\n                }\n              } else {\n                row.push(null);\n              }\n            }\n            dataArray.push(row);\n          }\n          dataTable = google.visualization.arrayToDataTable(dataArray);\n          title = vAxisTitle = fullAggName;\n          hAxisTitle = pivotData.colAttrs.map(function(item) {\n            var ref1;\n            return (ref1 = opts.labels[item]) != null ? ref1 : item;\n          }).join(\"-\");\n          if (hAxisTitle !== \"\") {\n            title += \" \" + opts.localeStrings.vs + \" \" + hAxisTitle;\n          }\n          groupByTitle = pivotData.rowAttrs.map(function(item) {\n            var ref1;\n            return (ref1 = opts.labels[item]) != null ? ref1 : item;\n          }).join(\"-\");\n          if (groupByTitle !== \"\") {\n            title += \" \" + opts.localeStrings.by + \" \" + groupByTitle;\n          }\n        }\n        options = {\n          title: title,\n          hAxis: {\n            title: hAxisTitle,\n            slantedText: numCharsInHAxis > 50\n          },\n          vAxis: {\n            title: vAxisTitle\n          },\n          tooltip: {\n            textStyle: {\n              fontName: 'Arial',\n              fontSize: 12\n            }\n          }\n        };\n        if (chartType === \"ColumnChart\") {\n          options.vAxis.minValue = 0;\n        }\n        if (chartType === \"ScatterChart\") {\n          options.legend = {\n            position: \"none\"\n          };\n          options.chartArea = {\n            'width': '80%',\n            'height': '80%'\n          };\n        } else if (dataArray[0].length === 2 && dataArray[0][1] === \"\") {\n          options.legend = {\n            position: \"none\"\n          };\n        }\n        options = $.extend(true, {}, options, opts.gchart, extraOptions, opts);\n        result = $(\"<div>\").css({\n          width: \"100%\",\n          height: \"100%\"\n        });\n        wrapper = new google.visualization.ChartWrapper({\n          dataTable: dataTable,\n          chartType: chartType,\n          options: options\n        });\n        return {\n          result: result,\n          wrapper: wrapper\n        };\n      };\n    };\n    return $.pivotUtilities.gchart_renderers = {\n      \"Line Chart\": makeGoogleChart(\"LineChart\"),\n      \"Bar Chart\": makeGoogleChart(\"ColumnChart\"),\n      \"Stacked Bar Chart\": makeGoogleChart(\"ColumnChart\", {\n        isStacked: true\n      }),\n      \"Area Chart\": makeGoogleChart(\"AreaChart\", {\n        isStacked: true\n      }),\n      \"Scatter Chart\": makeGoogleChart(\"ScatterChart\"),\n      \"Pie Chart\": makeGoogleChart(\"PieChart\")\n    };\n  });\n\n}).call(this);\n\n//# sourceMappingURL=gchart_renderers.js.map\n"]}